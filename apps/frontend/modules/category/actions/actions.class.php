<?php
// auto-generated by sfPropelCrud
// date: 2007/08/18 22:59:45
?>
<?php

/**
 * category actions.
 *
 * @package    quotes
 * @subpackage category
 * @author     Your name here
 * @version    SVN: $Id: actions.class.php 3335 2007-01-23 16:19:56Z fabien $
 */
class categoryActions extends sfActions
{
  public function executeIndex()
  {
    return $this->forward('category', 'list');
  }

  public function executeList()
  {
    $this->categorys = CategoryPeer::doSelect(new Criteria());
  }

  public function executeShow()
  {
    $this->category = CategoryPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->category);
  }

  public function executeCreate()
  {
    $this->category = new Category();

    $this->setTemplate('edit');
  }

  public function executeEdit()
  {
    $this->category = CategoryPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->category);
  }

  public function executeUpdate()
  {
    if (!$this->getRequestParameter('id'))
    {
      $category = new Category();
    }
    else
    {
      $category = CategoryPeer::retrieveByPk($this->getRequestParameter('id'));
      $this->forward404Unless($category);
    }

    $category->setId($this->getRequestParameter('id'));
    $category->setParentCategoryId($this->getRequestParameter('parent_category_id'));
    $category->setName($this->getRequestParameter('name'));
    $category->setSlug($this->getRequestParameter('slug'));
    $category->setListed($this->getRequestParameter('listed'));

    $category->save();

    return $this->redirect('category/show?id='.$category->getId());
  }

  public function executeDelete()
  {
    $category = CategoryPeer::retrieveByPk($this->getRequestParameter('id'));

    $this->forward404Unless($category);

    $category->delete();

    return $this->redirect('category/list');
  }
}
